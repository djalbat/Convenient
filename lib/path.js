'use strict';

var array = require('./array');

var second = array.second;


function isPathTopmostDirectoryName(path) {
  var topmostDirectoryName = topmostDirectoryNameFromPath(path),
      pathTopmostDirectoryName = topmostDirectoryName === null; ///

  return pathTopmostDirectoryName;
}

function combinePaths(path1, path2) {
  path1 = pathWithoutTrailingSlashFromPath(path1); ///

  var combinedPath = path1 + '/' + path2;

  return combinedPath;
}

function bottommostNameFromPath(path) {
  var bottommostName = null;

  var matches = path.match(/^.*\/([^\/]*$)/);

  if (matches !== null) {
    var secondMatch = second(matches);

    bottommostName = secondMatch; ///
  }

  return bottommostName;
}

function directoryPathFromPath(path) {
  var matches = path.match(/^(.*)\/[^\/]*$/),
      secondMatch = second(matches),
      directoryPath = secondMatch; ///

  return directoryPath;
}

function topmostDirectoryNameFromPath(path) {
  var topmostDirectoryName = null;

  var matches = path.match(/^([^\/]*)\//);

  if (matches !== null) {
    var secondMatch = second(matches);

    topmostDirectoryName = secondMatch; ///
  }

  return topmostDirectoryName;
}

function pathWithoutTrailingSlashFromPath(path) {
  var pathWithoutTrailingSlash = path.replace(/\/$/, '');

  return pathWithoutTrailingSlash;
}

function pathWithoutBottommostNameFromPath(path) {
  var pathWithoutBottommostName = null;

  var matches = path.match(/(^.*)\/[^\/]*$/);

  if (matches !== null) {
    var secondMatch = second(matches);

    pathWithoutBottommostName = secondMatch; ///
  }

  return pathWithoutBottommostName;
}

function pathWithoutTopmostDirectoryNameFromPath(path) {
  var pathWithoutTopmostDirectoryName = null;

  var matches = path.match(/^[^\/]*\/(.*$)/);

  if (matches !== null) {
    var secondMatch = second(matches);

    pathWithoutTopmostDirectoryName = secondMatch;
  }

  return pathWithoutTopmostDirectoryName;
}

module.exports = {
  isPathTopmostDirectoryName: isPathTopmostDirectoryName,
  combinePaths: combinePaths,
  bottommostNameFromPath: bottommostNameFromPath,
  directoryPathFromPath: directoryPathFromPath,
  topmostDirectoryNameFromPath: topmostDirectoryNameFromPath,
  pathWithoutTrailingSlashFromPath: pathWithoutTrailingSlashFromPath,
  pathWithoutBottommostNameFromPath: pathWithoutBottommostNameFromPath,
  pathWithoutTopmostDirectoryNameFromPath: pathWithoutTopmostDirectoryNameFromPath
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9wYXRoLmpzIl0sIm5hbWVzIjpbImFycmF5IiwicmVxdWlyZSIsInNlY29uZCIsImlzUGF0aFRvcG1vc3REaXJlY3RvcnlOYW1lIiwicGF0aCIsInRvcG1vc3REaXJlY3RvcnlOYW1lIiwidG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aCIsInBhdGhUb3Btb3N0RGlyZWN0b3J5TmFtZSIsImNvbWJpbmVQYXRocyIsInBhdGgxIiwicGF0aDIiLCJwYXRoV2l0aG91dFRyYWlsaW5nU2xhc2hGcm9tUGF0aCIsImNvbWJpbmVkUGF0aCIsImJvdHRvbW1vc3ROYW1lRnJvbVBhdGgiLCJib3R0b21tb3N0TmFtZSIsIm1hdGNoZXMiLCJtYXRjaCIsInNlY29uZE1hdGNoIiwiZGlyZWN0b3J5UGF0aEZyb21QYXRoIiwiZGlyZWN0b3J5UGF0aCIsInBhdGhXaXRob3V0VHJhaWxpbmdTbGFzaCIsInJlcGxhY2UiLCJwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGgiLCJwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lIiwicGF0aFdpdGhvdXRUb3Btb3N0RGlyZWN0b3J5TmFtZUZyb21QYXRoIiwicGF0aFdpdGhvdXRUb3Btb3N0RGlyZWN0b3J5TmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFFBQVFDLFFBQVEsU0FBUixDQUFkOztJQUVRQyxNLEdBQVdGLEssQ0FBWEUsTTs7O0FBRVIsU0FBU0MsMEJBQVQsQ0FBb0NDLElBQXBDLEVBQTBDO0FBQ3hDLE1BQU1DLHVCQUF1QkMsNkJBQTZCRixJQUE3QixDQUE3QjtBQUFBLE1BQ01HLDJCQUE0QkYseUJBQXlCLElBRDNELENBRHdDLENBRTBCOztBQUVsRSxTQUFPRSx3QkFBUDtBQUNEOztBQUVELFNBQVNDLFlBQVQsQ0FBc0JDLEtBQXRCLEVBQTZCQyxLQUE3QixFQUFvQztBQUNsQ0QsVUFBUUUsaUNBQWlDRixLQUFqQyxDQUFSLENBRGtDLENBQ2dCOztBQUVsRCxNQUFNRyxlQUFrQkgsS0FBbEIsU0FBMkJDLEtBQWpDOztBQUVBLFNBQU9FLFlBQVA7QUFDRDs7QUFFRCxTQUFTQyxzQkFBVCxDQUFnQ1QsSUFBaEMsRUFBc0M7QUFDcEMsTUFBSVUsaUJBQWlCLElBQXJCOztBQUVBLE1BQU1DLFVBQVVYLEtBQUtZLEtBQUwsQ0FBVyxnQkFBWCxDQUFoQjs7QUFFQSxNQUFJRCxZQUFZLElBQWhCLEVBQXNCO0FBQ3BCLFFBQU1FLGNBQWNmLE9BQU9hLE9BQVAsQ0FBcEI7O0FBRUFELHFCQUFpQkcsV0FBakIsQ0FIb0IsQ0FHVztBQUNoQzs7QUFFRCxTQUFPSCxjQUFQO0FBQ0Q7O0FBRUQsU0FBU0kscUJBQVQsQ0FBK0JkLElBQS9CLEVBQXFDO0FBQ25DLE1BQU1XLFVBQVVYLEtBQUtZLEtBQUwsQ0FBVyxnQkFBWCxDQUFoQjtBQUFBLE1BQ01DLGNBQWNmLE9BQU9hLE9BQVAsQ0FEcEI7QUFBQSxNQUVNSSxnQkFBZ0JGLFdBRnRCLENBRG1DLENBR0E7O0FBRW5DLFNBQU9FLGFBQVA7QUFDRDs7QUFFRCxTQUFTYiw0QkFBVCxDQUFzQ0YsSUFBdEMsRUFBNEM7QUFDMUMsTUFBSUMsdUJBQXVCLElBQTNCOztBQUVBLE1BQU1VLFVBQVVYLEtBQUtZLEtBQUwsQ0FBVyxhQUFYLENBQWhCOztBQUVBLE1BQUlELFlBQVksSUFBaEIsRUFBc0I7QUFDcEIsUUFBTUUsY0FBY2YsT0FBT2EsT0FBUCxDQUFwQjs7QUFFQVYsMkJBQXVCWSxXQUF2QixDQUhvQixDQUdpQjtBQUN0Qzs7QUFFRCxTQUFPWixvQkFBUDtBQUNEOztBQUVELFNBQVNNLGdDQUFULENBQTBDUCxJQUExQyxFQUFnRDtBQUM5QyxNQUFNZ0IsMkJBQTJCaEIsS0FBS2lCLE9BQUwsQ0FBYSxLQUFiLEVBQW9CLEVBQXBCLENBQWpDOztBQUVBLFNBQU9ELHdCQUFQO0FBQ0Q7O0FBRUQsU0FBU0UsaUNBQVQsQ0FBMkNsQixJQUEzQyxFQUFpRDtBQUMvQyxNQUFJbUIsNEJBQTRCLElBQWhDOztBQUVBLE1BQU1SLFVBQVVYLEtBQUtZLEtBQUwsQ0FBVyxnQkFBWCxDQUFoQjs7QUFFQSxNQUFJRCxZQUFZLElBQWhCLEVBQXNCO0FBQ3BCLFFBQU1FLGNBQWNmLE9BQU9hLE9BQVAsQ0FBcEI7O0FBRUFRLGdDQUE0Qk4sV0FBNUIsQ0FIb0IsQ0FHcUI7QUFDMUM7O0FBRUQsU0FBT00seUJBQVA7QUFDRDs7QUFFRCxTQUFTQyx1Q0FBVCxDQUFpRHBCLElBQWpELEVBQXVEO0FBQ3JELE1BQUlxQixrQ0FBa0MsSUFBdEM7O0FBRUEsTUFBTVYsVUFBVVgsS0FBS1ksS0FBTCxDQUFXLGdCQUFYLENBQWhCOztBQUVBLE1BQUlELFlBQVksSUFBaEIsRUFBc0I7QUFDcEIsUUFBTUUsY0FBY2YsT0FBT2EsT0FBUCxDQUFwQjs7QUFFQVUsc0NBQWtDUixXQUFsQztBQUNEOztBQUVELFNBQU9RLCtCQUFQO0FBQ0Q7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZnhCLDhCQUE0QkEsMEJBRGI7QUFFZkssZ0JBQWNBLFlBRkM7QUFHZkssMEJBQXdCQSxzQkFIVDtBQUlmSyx5QkFBdUJBLHFCQUpSO0FBS2ZaLGdDQUE4QkEsNEJBTGY7QUFNZkssb0NBQWtDQSxnQ0FObkI7QUFPZlcscUNBQW1DQSxpQ0FQcEI7QUFRZkUsMkNBQXlDQTtBQVIxQixDQUFqQiIsImZpbGUiOiJwYXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBhcnJheSA9IHJlcXVpcmUoJy4vYXJyYXknKTtcblxuY29uc3QgeyBzZWNvbmQgfSA9IGFycmF5O1xuXG5mdW5jdGlvbiBpc1BhdGhUb3Btb3N0RGlyZWN0b3J5TmFtZShwYXRoKSB7XG4gIGNvbnN0IHRvcG1vc3REaXJlY3RvcnlOYW1lID0gdG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aChwYXRoKSxcbiAgICAgICAgcGF0aFRvcG1vc3REaXJlY3RvcnlOYW1lID0gKHRvcG1vc3REaXJlY3RvcnlOYW1lID09PSBudWxsKTsgLy8vXG5cbiAgcmV0dXJuIHBhdGhUb3Btb3N0RGlyZWN0b3J5TmFtZTtcbn1cblxuZnVuY3Rpb24gY29tYmluZVBhdGhzKHBhdGgxLCBwYXRoMikge1xuICBwYXRoMSA9IHBhdGhXaXRob3V0VHJhaWxpbmdTbGFzaEZyb21QYXRoKHBhdGgxKTsgIC8vL1xuXG4gIGNvbnN0IGNvbWJpbmVkUGF0aCA9IGAke3BhdGgxfS8ke3BhdGgyfWA7XG5cbiAgcmV0dXJuIGNvbWJpbmVkUGF0aDtcbn1cblxuZnVuY3Rpb24gYm90dG9tbW9zdE5hbWVGcm9tUGF0aChwYXRoKSB7XG4gIGxldCBib3R0b21tb3N0TmFtZSA9IG51bGw7XG5cbiAgY29uc3QgbWF0Y2hlcyA9IHBhdGgubWF0Y2goL14uKlxcLyhbXlxcL10qJCkvKTtcblxuICBpZiAobWF0Y2hlcyAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHNlY29uZE1hdGNoID0gc2Vjb25kKG1hdGNoZXMpO1xuXG4gICAgYm90dG9tbW9zdE5hbWUgPSBzZWNvbmRNYXRjaDsgIC8vL1xuICB9XG5cbiAgcmV0dXJuIGJvdHRvbW1vc3ROYW1lO1xufVxuXG5mdW5jdGlvbiBkaXJlY3RvcnlQYXRoRnJvbVBhdGgocGF0aCkge1xuICBjb25zdCBtYXRjaGVzID0gcGF0aC5tYXRjaCgvXiguKilcXC9bXlxcL10qJC8pLFxuICAgICAgICBzZWNvbmRNYXRjaCA9IHNlY29uZChtYXRjaGVzKSxcbiAgICAgICAgZGlyZWN0b3J5UGF0aCA9IHNlY29uZE1hdGNoOyAvLy9cblxuICByZXR1cm4gZGlyZWN0b3J5UGF0aDtcbn1cblxuZnVuY3Rpb24gdG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aChwYXRoKSB7XG4gIGxldCB0b3Btb3N0RGlyZWN0b3J5TmFtZSA9IG51bGw7XG5cbiAgY29uc3QgbWF0Y2hlcyA9IHBhdGgubWF0Y2goL14oW15cXC9dKilcXC8vKTtcblxuICBpZiAobWF0Y2hlcyAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHNlY29uZE1hdGNoID0gc2Vjb25kKG1hdGNoZXMpO1xuXG4gICAgdG9wbW9zdERpcmVjdG9yeU5hbWUgPSBzZWNvbmRNYXRjaDsgIC8vL1xuICB9XG5cbiAgcmV0dXJuIHRvcG1vc3REaXJlY3RvcnlOYW1lO1xufVxuXG5mdW5jdGlvbiBwYXRoV2l0aG91dFRyYWlsaW5nU2xhc2hGcm9tUGF0aChwYXRoKSB7XG4gIGNvbnN0IHBhdGhXaXRob3V0VHJhaWxpbmdTbGFzaCA9IHBhdGgucmVwbGFjZSgvXFwvJC8sICcnKTtcblxuICByZXR1cm4gcGF0aFdpdGhvdXRUcmFpbGluZ1NsYXNoO1xufVxuXG5mdW5jdGlvbiBwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGgocGF0aCkge1xuICBsZXQgcGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZSA9IG51bGw7XG5cbiAgY29uc3QgbWF0Y2hlcyA9IHBhdGgubWF0Y2goLyheLiopXFwvW15cXC9dKiQvKTtcblxuICBpZiAobWF0Y2hlcyAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHNlY29uZE1hdGNoID0gc2Vjb25kKG1hdGNoZXMpO1xuXG4gICAgcGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZSA9IHNlY29uZE1hdGNoOyAvLy9cbiAgfVxuXG4gIHJldHVybiBwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lO1xufVxuXG5mdW5jdGlvbiBwYXRoV2l0aG91dFRvcG1vc3REaXJlY3RvcnlOYW1lRnJvbVBhdGgocGF0aCkge1xuICBsZXQgcGF0aFdpdGhvdXRUb3Btb3N0RGlyZWN0b3J5TmFtZSA9IG51bGw7XG5cbiAgY29uc3QgbWF0Y2hlcyA9IHBhdGgubWF0Y2goL15bXlxcL10qXFwvKC4qJCkvKTtcblxuICBpZiAobWF0Y2hlcyAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHNlY29uZE1hdGNoID0gc2Vjb25kKG1hdGNoZXMpO1xuXG4gICAgcGF0aFdpdGhvdXRUb3Btb3N0RGlyZWN0b3J5TmFtZSA9IHNlY29uZE1hdGNoO1xuICB9XG5cbiAgcmV0dXJuIHBhdGhXaXRob3V0VG9wbW9zdERpcmVjdG9yeU5hbWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc1BhdGhUb3Btb3N0RGlyZWN0b3J5TmFtZTogaXNQYXRoVG9wbW9zdERpcmVjdG9yeU5hbWUsXG4gIGNvbWJpbmVQYXRoczogY29tYmluZVBhdGhzLFxuICBib3R0b21tb3N0TmFtZUZyb21QYXRoOiBib3R0b21tb3N0TmFtZUZyb21QYXRoLFxuICBkaXJlY3RvcnlQYXRoRnJvbVBhdGg6IGRpcmVjdG9yeVBhdGhGcm9tUGF0aCxcbiAgdG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aDogdG9wbW9zdERpcmVjdG9yeU5hbWVGcm9tUGF0aCxcbiAgcGF0aFdpdGhvdXRUcmFpbGluZ1NsYXNoRnJvbVBhdGg6IHBhdGhXaXRob3V0VHJhaWxpbmdTbGFzaEZyb21QYXRoLFxuICBwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGg6IHBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWVGcm9tUGF0aCxcbiAgcGF0aFdpdGhvdXRUb3Btb3N0RGlyZWN0b3J5TmFtZUZyb21QYXRoOiBwYXRoV2l0aG91dFRvcG1vc3REaXJlY3RvcnlOYW1lRnJvbVBhdGhcbn07XG4iXX0=