"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseFile = parseFile;
exports.parseContent = parseContent;
exports.parseLine = parseLine;
exports["default"] = void 0;

var _fileSystem = require("../utilities/fileSystem");

function parseFile(filePath, args, regex) {
  var content = (0, _fileSystem.readFile)(filePath),
      parsedContent = parseContent(content, args, regex);
  return parsedContent;
}

function parseContent(content, args, regex) {
  var lines = content.split("\n"),
      parsedLines = parseLines(lines, args, regex),
      parsedContent = parsedLines.join("\n");
  return parsedContent;
}

function parseLine(line, args) {
  var regex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /\${(.+?)}/g;
  var parsedLine = line.replace(regex, function (match, token) {
    var parsedToken = parseToken(token, args);
    return parsedToken;
  });
  return parsedLine;
}

var _default = {
  parseFile: parseFile,
  parseContent: parseContent,
  parseLine: parseLine
};
exports["default"] = _default;

function parseLines(lines, args, regex) {
  var parsedLines = lines.map(function (line) {
    var parsedLine = parseLine(line, args, regex);
    return parsedLine;
  });
  return parsedLines;
}

function parseToken(token, args) {
  var parsedToken = "";

  if (args.hasOwnProperty(token)) {
    parsedToken = args[token];
  }

  return parsedToken;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvdGVtcGxhdGUuanMiXSwibmFtZXMiOlsicGFyc2VGaWxlIiwiZmlsZVBhdGgiLCJhcmdzIiwicmVnZXgiLCJjb250ZW50IiwicGFyc2VkQ29udGVudCIsInBhcnNlQ29udGVudCIsImxpbmVzIiwic3BsaXQiLCJwYXJzZWRMaW5lcyIsInBhcnNlTGluZXMiLCJqb2luIiwicGFyc2VMaW5lIiwibGluZSIsInBhcnNlZExpbmUiLCJyZXBsYWNlIiwibWF0Y2giLCJ0b2tlbiIsInBhcnNlZFRva2VuIiwicGFyc2VUb2tlbiIsIm1hcCIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQUVBOztBQUVPLFNBQVNBLFNBQVQsQ0FBbUJDLFFBQW5CLEVBQTZCQyxJQUE3QixFQUFtQ0MsS0FBbkMsRUFBMEM7QUFDL0MsTUFBTUMsT0FBTyxHQUFHLDBCQUFTSCxRQUFULENBQWhCO0FBQUEsTUFDTUksYUFBYSxHQUFHQyxZQUFZLENBQUNGLE9BQUQsRUFBVUYsSUFBVixFQUFnQkMsS0FBaEIsQ0FEbEM7QUFHQSxTQUFPRSxhQUFQO0FBQ0Q7O0FBRU0sU0FBU0MsWUFBVCxDQUFzQkYsT0FBdEIsRUFBK0JGLElBQS9CLEVBQXFDQyxLQUFyQyxFQUE0QztBQUNqRCxNQUFNSSxLQUFLLEdBQUdILE9BQU8sQ0FBQ0ksS0FBUixDQUFjLElBQWQsQ0FBZDtBQUFBLE1BQ01DLFdBQVcsR0FBR0MsVUFBVSxDQUFDSCxLQUFELEVBQVFMLElBQVIsRUFBY0MsS0FBZCxDQUQ5QjtBQUFBLE1BRU1FLGFBQWEsR0FBR0ksV0FBVyxDQUFDRSxJQUFaLENBQWlCLElBQWpCLENBRnRCO0FBSUEsU0FBT04sYUFBUDtBQUNEOztBQUVNLFNBQVNPLFNBQVQsQ0FBbUJDLElBQW5CLEVBQXlCWCxJQUF6QixFQUFxRDtBQUFBLE1BQXRCQyxLQUFzQix1RUFBZCxZQUFjO0FBQzFELE1BQU1XLFVBQVUsR0FBR0QsSUFBSSxDQUFDRSxPQUFMLENBQWFaLEtBQWIsRUFBb0IsVUFBQ2EsS0FBRCxFQUFRQyxLQUFSLEVBQWtCO0FBQ3ZELFFBQU1DLFdBQVcsR0FBR0MsVUFBVSxDQUFDRixLQUFELEVBQVFmLElBQVIsQ0FBOUI7QUFFQSxXQUFPZ0IsV0FBUDtBQUNELEdBSmtCLENBQW5CO0FBTUEsU0FBT0osVUFBUDtBQUNEOztlQUVjO0FBQ2JkLEVBQUFBLFNBQVMsRUFBVEEsU0FEYTtBQUViTSxFQUFBQSxZQUFZLEVBQVpBLFlBRmE7QUFHYk0sRUFBQUEsU0FBUyxFQUFUQTtBQUhhLEM7OztBQU1mLFNBQVNGLFVBQVQsQ0FBb0JILEtBQXBCLEVBQTJCTCxJQUEzQixFQUFpQ0MsS0FBakMsRUFBd0M7QUFDdEMsTUFBTU0sV0FBVyxHQUFHRixLQUFLLENBQUNhLEdBQU4sQ0FBVSxVQUFDUCxJQUFELEVBQVU7QUFDdEMsUUFBTUMsVUFBVSxHQUFHRixTQUFTLENBQUNDLElBQUQsRUFBT1gsSUFBUCxFQUFhQyxLQUFiLENBQTVCO0FBRUEsV0FBT1csVUFBUDtBQUNELEdBSm1CLENBQXBCO0FBTUEsU0FBT0wsV0FBUDtBQUNEOztBQUVELFNBQVNVLFVBQVQsQ0FBb0JGLEtBQXBCLEVBQTJCZixJQUEzQixFQUFpQztBQUMvQixNQUFJZ0IsV0FBVyxHQUFHLEVBQWxCOztBQUVBLE1BQUloQixJQUFJLENBQUNtQixjQUFMLENBQW9CSixLQUFwQixDQUFKLEVBQWdDO0FBQzlCQyxJQUFBQSxXQUFXLEdBQUdoQixJQUFJLENBQUNlLEtBQUQsQ0FBbEI7QUFDRDs7QUFFRCxTQUFPQyxXQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcmVhZEZpbGUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2ZpbGVTeXN0ZW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRmlsZShmaWxlUGF0aCwgYXJncywgcmVnZXgpIHtcbiAgY29uc3QgY29udGVudCA9IHJlYWRGaWxlKGZpbGVQYXRoKSxcbiAgICAgICAgcGFyc2VkQ29udGVudCA9IHBhcnNlQ29udGVudChjb250ZW50LCBhcmdzLCByZWdleCk7XG5cbiAgcmV0dXJuIHBhcnNlZENvbnRlbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbnRlbnQoY29udGVudCwgYXJncywgcmVnZXgpIHtcbiAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KFwiXFxuXCIpLFxuICAgICAgICBwYXJzZWRMaW5lcyA9IHBhcnNlTGluZXMobGluZXMsIGFyZ3MsIHJlZ2V4KSxcbiAgICAgICAgcGFyc2VkQ29udGVudCA9IHBhcnNlZExpbmVzLmpvaW4oXCJcXG5cIik7XG5cbiAgcmV0dXJuIHBhcnNlZENvbnRlbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUxpbmUobGluZSwgYXJncywgcmVnZXggPSAvXFwkeyguKz8pfS9nKSB7XG4gIGNvbnN0IHBhcnNlZExpbmUgPSBsaW5lLnJlcGxhY2UocmVnZXgsIChtYXRjaCwgdG9rZW4pID0+IHtcbiAgICBjb25zdCBwYXJzZWRUb2tlbiA9IHBhcnNlVG9rZW4odG9rZW4sIGFyZ3MpO1xuXG4gICAgcmV0dXJuIHBhcnNlZFRva2VuO1xuICB9KTtcblxuICByZXR1cm4gcGFyc2VkTGluZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBwYXJzZUZpbGUsXG4gIHBhcnNlQ29udGVudCxcbiAgcGFyc2VMaW5lXG59O1xuXG5mdW5jdGlvbiBwYXJzZUxpbmVzKGxpbmVzLCBhcmdzLCByZWdleCkge1xuICBjb25zdCBwYXJzZWRMaW5lcyA9IGxpbmVzLm1hcCgobGluZSkgPT4ge1xuICAgIGNvbnN0IHBhcnNlZExpbmUgPSBwYXJzZUxpbmUobGluZSwgYXJncywgcmVnZXgpO1xuXG4gICAgcmV0dXJuIHBhcnNlZExpbmU7XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWRMaW5lcztcbn1cblxuZnVuY3Rpb24gcGFyc2VUb2tlbih0b2tlbiwgYXJncykge1xuICBsZXQgcGFyc2VkVG9rZW4gPSBcIlwiO1xuXG4gIGlmIChhcmdzLmhhc093blByb3BlcnR5KHRva2VuKSkge1xuICAgIHBhcnNlZFRva2VuID0gYXJnc1t0b2tlbl07XG4gIH1cblxuICByZXR1cm4gcGFyc2VkVG9rZW47XG59XG4iXSwiZmlsZSI6InRlbXBsYXRlLmpzIn0=