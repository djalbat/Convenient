'use strict';

var fileSystemUtilities = require('../utilities/fileSystem');

var readFile = fileSystemUtilities.readFile;

function parseFile(filePath, args, regex) {
  var content = readFile(filePath),
      parsedContent = parseContent(content, args, regex);
  return parsedContent;
}

function parseContent(content, args, regex) {
  var lines = content.split('\n'),
      parsedLines = parseLines(lines, args, regex),
      parsedContent = parsedLines.join('\n');
  return parsedContent;
}

function parseLine(line, args) {
  var regex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /\${(.+?)}/g;
  var parsedLine = line.replace(regex, function (match, token) {
    var parsedToken = parseToken(token, args);
    return parsedToken;
  });
  return parsedLine;
}

module.exports = {
  parseFile: parseFile,
  parseContent: parseContent,
  parseLine: parseLine
};

function parseLines(lines, args, regex) {
  var parsedLines = lines.map(function (line) {
    var parsedLine = parseLine(line, args, regex);
    return parsedLine;
  });
  return parsedLines;
}

function parseToken(token, args) {
  var parsedToken = '';

  if (args.hasOwnProperty(token)) {
    parsedToken = args[token];
  }

  return parsedToken;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbImZpbGVTeXN0ZW1VdGlsaXRpZXMiLCJyZXF1aXJlIiwicmVhZEZpbGUiLCJwYXJzZUZpbGUiLCJmaWxlUGF0aCIsImFyZ3MiLCJyZWdleCIsImNvbnRlbnQiLCJwYXJzZWRDb250ZW50IiwicGFyc2VDb250ZW50IiwibGluZXMiLCJzcGxpdCIsInBhcnNlZExpbmVzIiwicGFyc2VMaW5lcyIsImpvaW4iLCJwYXJzZUxpbmUiLCJsaW5lIiwicGFyc2VkTGluZSIsInJlcGxhY2UiLCJtYXRjaCIsInRva2VuIiwicGFyc2VkVG9rZW4iLCJwYXJzZVRva2VuIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1hcCIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxtQkFBbUIsR0FBR0MsT0FBTyxDQUFDLHlCQUFELENBQW5DOztJQUVRQyxRLEdBQWFGLG1CLENBQWJFLFE7O0FBRVIsU0FBU0MsU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLElBQTdCLEVBQW1DQyxLQUFuQyxFQUEwQztBQUN4QyxNQUFNQyxPQUFPLEdBQUdMLFFBQVEsQ0FBQ0UsUUFBRCxDQUF4QjtBQUFBLE1BQ01JLGFBQWEsR0FBR0MsWUFBWSxDQUFDRixPQUFELEVBQVVGLElBQVYsRUFBZ0JDLEtBQWhCLENBRGxDO0FBR0EsU0FBT0UsYUFBUDtBQUNEOztBQUVELFNBQVNDLFlBQVQsQ0FBc0JGLE9BQXRCLEVBQStCRixJQUEvQixFQUFxQ0MsS0FBckMsRUFBNEM7QUFDMUMsTUFBTUksS0FBSyxHQUFHSCxPQUFPLENBQUNJLEtBQVIsQ0FBYyxJQUFkLENBQWQ7QUFBQSxNQUNNQyxXQUFXLEdBQUdDLFVBQVUsQ0FBQ0gsS0FBRCxFQUFRTCxJQUFSLEVBQWNDLEtBQWQsQ0FEOUI7QUFBQSxNQUVNRSxhQUFhLEdBQUdJLFdBQVcsQ0FBQ0UsSUFBWixDQUFpQixJQUFqQixDQUZ0QjtBQUlBLFNBQU9OLGFBQVA7QUFDRDs7QUFFRCxTQUFTTyxTQUFULENBQW1CQyxJQUFuQixFQUF5QlgsSUFBekIsRUFBcUQ7QUFBQSxNQUF0QkMsS0FBc0IsdUVBQWQsWUFBYztBQUNuRCxNQUFNVyxVQUFVLEdBQUdELElBQUksQ0FBQ0UsT0FBTCxDQUFhWixLQUFiLEVBQW9CLFVBQVNhLEtBQVQsRUFBZ0JDLEtBQWhCLEVBQXVCO0FBQzVELFFBQU1DLFdBQVcsR0FBR0MsVUFBVSxDQUFDRixLQUFELEVBQVFmLElBQVIsQ0FBOUI7QUFFQSxXQUFPZ0IsV0FBUDtBQUNELEdBSmtCLENBQW5CO0FBTUEsU0FBT0osVUFBUDtBQUNEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZnJCLEVBQUFBLFNBQVMsRUFBVEEsU0FEZTtBQUVmTSxFQUFBQSxZQUFZLEVBQVpBLFlBRmU7QUFHZk0sRUFBQUEsU0FBUyxFQUFUQTtBQUhlLENBQWpCOztBQU1BLFNBQVNGLFVBQVQsQ0FBb0JILEtBQXBCLEVBQTJCTCxJQUEzQixFQUFpQ0MsS0FBakMsRUFBd0M7QUFDdEMsTUFBTU0sV0FBVyxHQUFHRixLQUFLLENBQUNlLEdBQU4sQ0FBVSxVQUFTVCxJQUFULEVBQWU7QUFDM0MsUUFBTUMsVUFBVSxHQUFHRixTQUFTLENBQUNDLElBQUQsRUFBT1gsSUFBUCxFQUFhQyxLQUFiLENBQTVCO0FBRUEsV0FBT1csVUFBUDtBQUNELEdBSm1CLENBQXBCO0FBTUEsU0FBT0wsV0FBUDtBQUNEOztBQUVELFNBQVNVLFVBQVQsQ0FBb0JGLEtBQXBCLEVBQTJCZixJQUEzQixFQUFpQztBQUMvQixNQUFJZ0IsV0FBVyxHQUFHLEVBQWxCOztBQUVBLE1BQUloQixJQUFJLENBQUNxQixjQUFMLENBQW9CTixLQUFwQixDQUFKLEVBQWdDO0FBQzlCQyxJQUFBQSxXQUFXLEdBQUdoQixJQUFJLENBQUNlLEtBQUQsQ0FBbEI7QUFDRDs7QUFFRCxTQUFPQyxXQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZpbGVTeXN0ZW1VdGlsaXRpZXMgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvZmlsZVN5c3RlbScpO1xuXG5jb25zdCB7IHJlYWRGaWxlIH0gPSBmaWxlU3lzdGVtVXRpbGl0aWVzO1xuXG5mdW5jdGlvbiBwYXJzZUZpbGUoZmlsZVBhdGgsIGFyZ3MsIHJlZ2V4KSB7XG4gIGNvbnN0IGNvbnRlbnQgPSByZWFkRmlsZShmaWxlUGF0aCksXG4gICAgICAgIHBhcnNlZENvbnRlbnQgPSBwYXJzZUNvbnRlbnQoY29udGVudCwgYXJncywgcmVnZXgpO1xuXG4gIHJldHVybiBwYXJzZWRDb250ZW50O1xufVxuXG5mdW5jdGlvbiBwYXJzZUNvbnRlbnQoY29udGVudCwgYXJncywgcmVnZXgpIHtcbiAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KCdcXG4nKSxcbiAgICAgICAgcGFyc2VkTGluZXMgPSBwYXJzZUxpbmVzKGxpbmVzLCBhcmdzLCByZWdleCksXG4gICAgICAgIHBhcnNlZENvbnRlbnQgPSBwYXJzZWRMaW5lcy5qb2luKCdcXG4nKTtcblxuICByZXR1cm4gcGFyc2VkQ29udGVudDtcbn1cblxuZnVuY3Rpb24gcGFyc2VMaW5lKGxpbmUsIGFyZ3MsIHJlZ2V4ID0gL1xcJHsoLis/KX0vZykge1xuICBjb25zdCBwYXJzZWRMaW5lID0gbGluZS5yZXBsYWNlKHJlZ2V4LCBmdW5jdGlvbihtYXRjaCwgdG9rZW4pIHtcbiAgICBjb25zdCBwYXJzZWRUb2tlbiA9IHBhcnNlVG9rZW4odG9rZW4sIGFyZ3MpO1xuXG4gICAgcmV0dXJuIHBhcnNlZFRva2VuO1xuICB9KTtcblxuICByZXR1cm4gcGFyc2VkTGluZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBhcnNlRmlsZSxcbiAgcGFyc2VDb250ZW50LFxuICBwYXJzZUxpbmVcbn07XG5cbmZ1bmN0aW9uIHBhcnNlTGluZXMobGluZXMsIGFyZ3MsIHJlZ2V4KSB7XG4gIGNvbnN0IHBhcnNlZExpbmVzID0gbGluZXMubWFwKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICBjb25zdCBwYXJzZWRMaW5lID0gcGFyc2VMaW5lKGxpbmUsIGFyZ3MsIHJlZ2V4KTtcblxuICAgIHJldHVybiBwYXJzZWRMaW5lO1xuICB9KTtcblxuICByZXR1cm4gcGFyc2VkTGluZXM7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVG9rZW4odG9rZW4sIGFyZ3MpIHtcbiAgbGV0IHBhcnNlZFRva2VuID0gJyc7XG5cbiAgaWYgKGFyZ3MuaGFzT3duUHJvcGVydHkodG9rZW4pKSB7XG4gICAgcGFyc2VkVG9rZW4gPSBhcmdzW3Rva2VuXTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZWRUb2tlbjtcbn1cbiJdfQ==