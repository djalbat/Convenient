"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseFile = parseFile;
exports.parseContent = parseContent;
exports.parseLine = parseLine;
exports["default"] = void 0;

var _fileSystem = require("../utilities/fileSystem");

function parseFile(filePath, args, regex) {
  var content = (0, _fileSystem.readFile)(filePath),
      parsedContent = parseContent(content, args, regex);
  return parsedContent;
}

function parseContent(content, args, regex) {
  var lines = content.split("\n"),
      parsedLines = parseLines(lines, args, regex),
      parsedContent = parsedLines.join("\n");
  return parsedContent;
}

function parseLine(line, args) {
  var regex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /\${(.+?)}/g;
  var parsedLine = line.replace(regex, function (match, token) {
    var parsedToken = parseToken(token, args);
    return parsedToken;
  });
  return parsedLine;
}

var _default = {
  parseFile: parseFile,
  parseContent: parseContent,
  parseLine: parseLine
};
exports["default"] = _default;

function parseLines(lines, args, regex) {
  var parsedLines = lines.map(function (line) {
    var parsedLine = parseLine(line, args, regex);
    return parsedLine;
  });
  return parsedLines;
}

function parseToken(token, args) {
  var parsedToken = "";

  if (args.hasOwnProperty(token)) {
    parsedToken = args[token];
  }

  return parsedToken;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbInBhcnNlRmlsZSIsImZpbGVQYXRoIiwiYXJncyIsInJlZ2V4IiwiY29udGVudCIsInBhcnNlZENvbnRlbnQiLCJwYXJzZUNvbnRlbnQiLCJsaW5lcyIsInNwbGl0IiwicGFyc2VkTGluZXMiLCJwYXJzZUxpbmVzIiwiam9pbiIsInBhcnNlTGluZSIsImxpbmUiLCJwYXJzZWRMaW5lIiwicmVwbGFjZSIsIm1hdGNoIiwidG9rZW4iLCJwYXJzZWRUb2tlbiIsInBhcnNlVG9rZW4iLCJtYXAiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFFQTs7QUFFTyxTQUFTQSxTQUFULENBQW1CQyxRQUFuQixFQUE2QkMsSUFBN0IsRUFBbUNDLEtBQW5DLEVBQTBDO0FBQy9DLE1BQU1DLE9BQU8sR0FBRywwQkFBU0gsUUFBVCxDQUFoQjtBQUFBLE1BQ01JLGFBQWEsR0FBR0MsWUFBWSxDQUFDRixPQUFELEVBQVVGLElBQVYsRUFBZ0JDLEtBQWhCLENBRGxDO0FBR0EsU0FBT0UsYUFBUDtBQUNEOztBQUVNLFNBQVNDLFlBQVQsQ0FBc0JGLE9BQXRCLEVBQStCRixJQUEvQixFQUFxQ0MsS0FBckMsRUFBNEM7QUFDakQsTUFBTUksS0FBSyxHQUFHSCxPQUFPLENBQUNJLEtBQVIsQ0FBYyxJQUFkLENBQWQ7QUFBQSxNQUNNQyxXQUFXLEdBQUdDLFVBQVUsQ0FBQ0gsS0FBRCxFQUFRTCxJQUFSLEVBQWNDLEtBQWQsQ0FEOUI7QUFBQSxNQUVNRSxhQUFhLEdBQUdJLFdBQVcsQ0FBQ0UsSUFBWixDQUFpQixJQUFqQixDQUZ0QjtBQUlBLFNBQU9OLGFBQVA7QUFDRDs7QUFFTSxTQUFTTyxTQUFULENBQW1CQyxJQUFuQixFQUF5QlgsSUFBekIsRUFBcUQ7QUFBQSxNQUF0QkMsS0FBc0IsdUVBQWQsWUFBYztBQUMxRCxNQUFNVyxVQUFVLEdBQUdELElBQUksQ0FBQ0UsT0FBTCxDQUFhWixLQUFiLEVBQW9CLFVBQUNhLEtBQUQsRUFBUUMsS0FBUixFQUFrQjtBQUN2RCxRQUFNQyxXQUFXLEdBQUdDLFVBQVUsQ0FBQ0YsS0FBRCxFQUFRZixJQUFSLENBQTlCO0FBRUEsV0FBT2dCLFdBQVA7QUFDRCxHQUprQixDQUFuQjtBQU1BLFNBQU9KLFVBQVA7QUFDRDs7ZUFFYztBQUNiZCxFQUFBQSxTQUFTLEVBQVRBLFNBRGE7QUFFYk0sRUFBQUEsWUFBWSxFQUFaQSxZQUZhO0FBR2JNLEVBQUFBLFNBQVMsRUFBVEE7QUFIYSxDOzs7QUFNZixTQUFTRixVQUFULENBQW9CSCxLQUFwQixFQUEyQkwsSUFBM0IsRUFBaUNDLEtBQWpDLEVBQXdDO0FBQ3RDLE1BQU1NLFdBQVcsR0FBR0YsS0FBSyxDQUFDYSxHQUFOLENBQVUsVUFBQ1AsSUFBRCxFQUFVO0FBQ3RDLFFBQU1DLFVBQVUsR0FBR0YsU0FBUyxDQUFDQyxJQUFELEVBQU9YLElBQVAsRUFBYUMsS0FBYixDQUE1QjtBQUVBLFdBQU9XLFVBQVA7QUFDRCxHQUptQixDQUFwQjtBQU1BLFNBQU9MLFdBQVA7QUFDRDs7QUFFRCxTQUFTVSxVQUFULENBQW9CRixLQUFwQixFQUEyQmYsSUFBM0IsRUFBaUM7QUFDL0IsTUFBSWdCLFdBQVcsR0FBRyxFQUFsQjs7QUFFQSxNQUFJaEIsSUFBSSxDQUFDbUIsY0FBTCxDQUFvQkosS0FBcEIsQ0FBSixFQUFnQztBQUM5QkMsSUFBQUEsV0FBVyxHQUFHaEIsSUFBSSxDQUFDZSxLQUFELENBQWxCO0FBQ0Q7O0FBRUQsU0FBT0MsV0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHJlYWRGaWxlIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9maWxlU3lzdGVtXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUZpbGUoZmlsZVBhdGgsIGFyZ3MsIHJlZ2V4KSB7XG4gIGNvbnN0IGNvbnRlbnQgPSByZWFkRmlsZShmaWxlUGF0aCksXG4gICAgICAgIHBhcnNlZENvbnRlbnQgPSBwYXJzZUNvbnRlbnQoY29udGVudCwgYXJncywgcmVnZXgpO1xuXG4gIHJldHVybiBwYXJzZWRDb250ZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb250ZW50KGNvbnRlbnQsIGFyZ3MsIHJlZ2V4KSB7XG4gIGNvbnN0IGxpbmVzID0gY29udGVudC5zcGxpdChcIlxcblwiKSxcbiAgICAgICAgcGFyc2VkTGluZXMgPSBwYXJzZUxpbmVzKGxpbmVzLCBhcmdzLCByZWdleCksXG4gICAgICAgIHBhcnNlZENvbnRlbnQgPSBwYXJzZWRMaW5lcy5qb2luKFwiXFxuXCIpO1xuXG4gIHJldHVybiBwYXJzZWRDb250ZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VMaW5lKGxpbmUsIGFyZ3MsIHJlZ2V4ID0gL1xcJHsoLis/KX0vZykge1xuICBjb25zdCBwYXJzZWRMaW5lID0gbGluZS5yZXBsYWNlKHJlZ2V4LCAobWF0Y2gsIHRva2VuKSA9PiB7XG4gICAgY29uc3QgcGFyc2VkVG9rZW4gPSBwYXJzZVRva2VuKHRva2VuLCBhcmdzKTtcblxuICAgIHJldHVybiBwYXJzZWRUb2tlbjtcbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZExpbmU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgcGFyc2VGaWxlLFxuICBwYXJzZUNvbnRlbnQsXG4gIHBhcnNlTGluZVxufTtcblxuZnVuY3Rpb24gcGFyc2VMaW5lcyhsaW5lcywgYXJncywgcmVnZXgpIHtcbiAgY29uc3QgcGFyc2VkTGluZXMgPSBsaW5lcy5tYXAoKGxpbmUpID0+IHtcbiAgICBjb25zdCBwYXJzZWRMaW5lID0gcGFyc2VMaW5lKGxpbmUsIGFyZ3MsIHJlZ2V4KTtcblxuICAgIHJldHVybiBwYXJzZWRMaW5lO1xuICB9KTtcblxuICByZXR1cm4gcGFyc2VkTGluZXM7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVG9rZW4odG9rZW4sIGFyZ3MpIHtcbiAgbGV0IHBhcnNlZFRva2VuID0gXCJcIjtcblxuICBpZiAoYXJncy5oYXNPd25Qcm9wZXJ0eSh0b2tlbikpIHtcbiAgICBwYXJzZWRUb2tlbiA9IGFyZ3NbdG9rZW5dO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlZFRva2VuO1xufVxuIl19