'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseFile = parseFile;
exports.parseContent = parseContent;
exports.parseLine = parseLine;
exports["default"] = void 0;

var _fileSystem = require("../utilities/fileSystem");

function parseFile(filePath, args, regex) {
  var content = (0, _fileSystem.readFile)(filePath),
      parsedContent = parseContent(content, args, regex);
  return parsedContent;
}

function parseContent(content, args, regex) {
  var lines = content.split('\n'),
      parsedLines = parseLines(lines, args, regex),
      parsedContent = parsedLines.join('\n');
  return parsedContent;
}

function parseLine(line, args) {
  var regex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /\${(.+?)}/g;
  var parsedLine = line.replace(regex, function (match, token) {
    var parsedToken = parseToken(token, args);
    return parsedToken;
  });
  return parsedLine;
}

var _default = {
  parseFile: parseFile,
  parseContent: parseContent,
  parseLine: parseLine
};
exports["default"] = _default;

function parseLines(lines, args, regex) {
  var parsedLines = lines.map(function (line) {
    var parsedLine = parseLine(line, args, regex);
    return parsedLine;
  });
  return parsedLines;
}

function parseToken(token, args) {
  var parsedToken = '';

  if (args.hasOwnProperty(token)) {
    parsedToken = args[token];
  }

  return parsedToken;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbInBhcnNlRmlsZSIsImZpbGVQYXRoIiwiYXJncyIsInJlZ2V4IiwiY29udGVudCIsInBhcnNlZENvbnRlbnQiLCJwYXJzZUNvbnRlbnQiLCJsaW5lcyIsInNwbGl0IiwicGFyc2VkTGluZXMiLCJwYXJzZUxpbmVzIiwiam9pbiIsInBhcnNlTGluZSIsImxpbmUiLCJwYXJzZWRMaW5lIiwicmVwbGFjZSIsIm1hdGNoIiwidG9rZW4iLCJwYXJzZWRUb2tlbiIsInBhcnNlVG9rZW4iLCJtYXAiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFFQTs7QUFFTyxTQUFTQSxTQUFULENBQW1CQyxRQUFuQixFQUE2QkMsSUFBN0IsRUFBbUNDLEtBQW5DLEVBQTBDO0FBQy9DLE1BQU1DLE9BQU8sR0FBRywwQkFBU0gsUUFBVCxDQUFoQjtBQUFBLE1BQ01JLGFBQWEsR0FBR0MsWUFBWSxDQUFDRixPQUFELEVBQVVGLElBQVYsRUFBZ0JDLEtBQWhCLENBRGxDO0FBR0EsU0FBT0UsYUFBUDtBQUNEOztBQUVNLFNBQVNDLFlBQVQsQ0FBc0JGLE9BQXRCLEVBQStCRixJQUEvQixFQUFxQ0MsS0FBckMsRUFBNEM7QUFDakQsTUFBTUksS0FBSyxHQUFHSCxPQUFPLENBQUNJLEtBQVIsQ0FBYyxJQUFkLENBQWQ7QUFBQSxNQUNNQyxXQUFXLEdBQUdDLFVBQVUsQ0FBQ0gsS0FBRCxFQUFRTCxJQUFSLEVBQWNDLEtBQWQsQ0FEOUI7QUFBQSxNQUVNRSxhQUFhLEdBQUdJLFdBQVcsQ0FBQ0UsSUFBWixDQUFpQixJQUFqQixDQUZ0QjtBQUlBLFNBQU9OLGFBQVA7QUFDRDs7QUFFTSxTQUFTTyxTQUFULENBQW1CQyxJQUFuQixFQUF5QlgsSUFBekIsRUFBcUQ7QUFBQSxNQUF0QkMsS0FBc0IsdUVBQWQsWUFBYztBQUMxRCxNQUFNVyxVQUFVLEdBQUdELElBQUksQ0FBQ0UsT0FBTCxDQUFhWixLQUFiLEVBQW9CLFVBQVNhLEtBQVQsRUFBZ0JDLEtBQWhCLEVBQXVCO0FBQzVELFFBQU1DLFdBQVcsR0FBR0MsVUFBVSxDQUFDRixLQUFELEVBQVFmLElBQVIsQ0FBOUI7QUFFQSxXQUFPZ0IsV0FBUDtBQUNELEdBSmtCLENBQW5CO0FBTUEsU0FBT0osVUFBUDtBQUNEOztlQUVjO0FBQ2JkLEVBQUFBLFNBQVMsRUFBVEEsU0FEYTtBQUViTSxFQUFBQSxZQUFZLEVBQVpBLFlBRmE7QUFHYk0sRUFBQUEsU0FBUyxFQUFUQTtBQUhhLEM7OztBQU1mLFNBQVNGLFVBQVQsQ0FBb0JILEtBQXBCLEVBQTJCTCxJQUEzQixFQUFpQ0MsS0FBakMsRUFBd0M7QUFDdEMsTUFBTU0sV0FBVyxHQUFHRixLQUFLLENBQUNhLEdBQU4sQ0FBVSxVQUFTUCxJQUFULEVBQWU7QUFDM0MsUUFBTUMsVUFBVSxHQUFHRixTQUFTLENBQUNDLElBQUQsRUFBT1gsSUFBUCxFQUFhQyxLQUFiLENBQTVCO0FBRUEsV0FBT1csVUFBUDtBQUNELEdBSm1CLENBQXBCO0FBTUEsU0FBT0wsV0FBUDtBQUNEOztBQUVELFNBQVNVLFVBQVQsQ0FBb0JGLEtBQXBCLEVBQTJCZixJQUEzQixFQUFpQztBQUMvQixNQUFJZ0IsV0FBVyxHQUFHLEVBQWxCOztBQUVBLE1BQUloQixJQUFJLENBQUNtQixjQUFMLENBQW9CSixLQUFwQixDQUFKLEVBQWdDO0FBQzlCQyxJQUFBQSxXQUFXLEdBQUdoQixJQUFJLENBQUNlLEtBQUQsQ0FBbEI7QUFDRDs7QUFFRCxTQUFPQyxXQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IHJlYWRGaWxlIH0gZnJvbSAnLi4vdXRpbGl0aWVzL2ZpbGVTeXN0ZW0nO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VGaWxlKGZpbGVQYXRoLCBhcmdzLCByZWdleCkge1xuICBjb25zdCBjb250ZW50ID0gcmVhZEZpbGUoZmlsZVBhdGgpLFxuICAgICAgICBwYXJzZWRDb250ZW50ID0gcGFyc2VDb250ZW50KGNvbnRlbnQsIGFyZ3MsIHJlZ2V4KTtcblxuICByZXR1cm4gcGFyc2VkQ29udGVudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29udGVudChjb250ZW50LCBhcmdzLCByZWdleCkge1xuICBjb25zdCBsaW5lcyA9IGNvbnRlbnQuc3BsaXQoJ1xcbicpLFxuICAgICAgICBwYXJzZWRMaW5lcyA9IHBhcnNlTGluZXMobGluZXMsIGFyZ3MsIHJlZ2V4KSxcbiAgICAgICAgcGFyc2VkQ29udGVudCA9IHBhcnNlZExpbmVzLmpvaW4oJ1xcbicpO1xuXG4gIHJldHVybiBwYXJzZWRDb250ZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VMaW5lKGxpbmUsIGFyZ3MsIHJlZ2V4ID0gL1xcJHsoLis/KX0vZykge1xuICBjb25zdCBwYXJzZWRMaW5lID0gbGluZS5yZXBsYWNlKHJlZ2V4LCBmdW5jdGlvbihtYXRjaCwgdG9rZW4pIHtcbiAgICBjb25zdCBwYXJzZWRUb2tlbiA9IHBhcnNlVG9rZW4odG9rZW4sIGFyZ3MpO1xuXG4gICAgcmV0dXJuIHBhcnNlZFRva2VuO1xuICB9KTtcblxuICByZXR1cm4gcGFyc2VkTGluZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBwYXJzZUZpbGUsXG4gIHBhcnNlQ29udGVudCxcbiAgcGFyc2VMaW5lXG59O1xuXG5mdW5jdGlvbiBwYXJzZUxpbmVzKGxpbmVzLCBhcmdzLCByZWdleCkge1xuICBjb25zdCBwYXJzZWRMaW5lcyA9IGxpbmVzLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgY29uc3QgcGFyc2VkTGluZSA9IHBhcnNlTGluZShsaW5lLCBhcmdzLCByZWdleCk7XG5cbiAgICByZXR1cm4gcGFyc2VkTGluZTtcbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZExpbmVzO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRva2VuKHRva2VuLCBhcmdzKSB7XG4gIGxldCBwYXJzZWRUb2tlbiA9ICcnO1xuXG4gIGlmIChhcmdzLmhhc093blByb3BlcnR5KHRva2VuKSkge1xuICAgIHBhcnNlZFRva2VuID0gYXJnc1t0b2tlbl07XG4gIH1cblxuICByZXR1cm4gcGFyc2VkVG9rZW47XG59XG4iXX0=