'use strict';

var fileSystemUtilities = require('../utilities/fileSystem');

var readFile = fileSystemUtilities.readFile;


function parseFile(filePath, args) {
  var content = readFile(filePath),
      parsedContent = parseContent(content, args);

  return parsedContent;
}

function parseContent(content, args) {
  var lines = content.split('\n'),
      parsedLines = parseLines(lines, args),
      parsedContent = parsedLines.join('\n');

  return parsedContent;
}

function parseLine(line, args) {
  var parsedLine = line.replace(/\$\{(.+?)\}/g, function (match, token) {
    var parsedToken = parseToken(token, args);

    return parsedToken;
  });

  return parsedLine;
}

module.exports = {
  parseFile: parseFile,
  parseContent: parseContent,
  parseLine: parseLine
};

function parseLines(lines, args) {
  var parsedLines = lines.map(function (line) {
    var parsedLine = parseLine(line, args);

    return parsedLine;
  });

  return parsedLines;
}

function parseToken(token, args) {
  var parsedToken = '';

  if (args.hasOwnProperty(token)) {
    parsedToken = args[token];
  }

  return parsedToken;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvdGVtcGxhdGUuanMiXSwibmFtZXMiOlsiZmlsZVN5c3RlbVV0aWxpdGllcyIsInJlcXVpcmUiLCJyZWFkRmlsZSIsInBhcnNlRmlsZSIsImZpbGVQYXRoIiwiYXJncyIsImNvbnRlbnQiLCJwYXJzZWRDb250ZW50IiwicGFyc2VDb250ZW50IiwibGluZXMiLCJzcGxpdCIsInBhcnNlZExpbmVzIiwicGFyc2VMaW5lcyIsImpvaW4iLCJwYXJzZUxpbmUiLCJsaW5lIiwicGFyc2VkTGluZSIsInJlcGxhY2UiLCJtYXRjaCIsInRva2VuIiwicGFyc2VkVG9rZW4iLCJwYXJzZVRva2VuIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1hcCIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxzQkFBc0JDLFFBQVEseUJBQVIsQ0FBNUI7O0lBRVFDLFEsR0FBYUYsbUIsQ0FBYkUsUTs7O0FBRVIsU0FBU0MsU0FBVCxDQUFtQkMsUUFBbkIsRUFBNkJDLElBQTdCLEVBQW1DO0FBQ2pDLE1BQU1DLFVBQVVKLFNBQVNFLFFBQVQsQ0FBaEI7QUFBQSxNQUNNRyxnQkFBZ0JDLGFBQWFGLE9BQWIsRUFBc0JELElBQXRCLENBRHRCOztBQUdBLFNBQU9FLGFBQVA7QUFDRDs7QUFFRCxTQUFTQyxZQUFULENBQXNCRixPQUF0QixFQUErQkQsSUFBL0IsRUFBcUM7QUFDbkMsTUFBTUksUUFBUUgsUUFBUUksS0FBUixDQUFjLElBQWQsQ0FBZDtBQUFBLE1BQ01DLGNBQWNDLFdBQVdILEtBQVgsRUFBa0JKLElBQWxCLENBRHBCO0FBQUEsTUFFTUUsZ0JBQWdCSSxZQUFZRSxJQUFaLENBQWlCLElBQWpCLENBRnRCOztBQUlBLFNBQU9OLGFBQVA7QUFDRDs7QUFFRCxTQUFTTyxTQUFULENBQW1CQyxJQUFuQixFQUF5QlYsSUFBekIsRUFBK0I7QUFDN0IsTUFBTVcsYUFBYUQsS0FBS0UsT0FBTCxDQUFhLGNBQWIsRUFBNkIsVUFBU0MsS0FBVCxFQUFnQkMsS0FBaEIsRUFBdUI7QUFDckUsUUFBTUMsY0FBY0MsV0FBV0YsS0FBWCxFQUFrQmQsSUFBbEIsQ0FBcEI7O0FBRUEsV0FBT2UsV0FBUDtBQUNELEdBSmtCLENBQW5COztBQU1BLFNBQU9KLFVBQVA7QUFDRDs7QUFFRE0sT0FBT0MsT0FBUCxHQUFpQjtBQUNmcEIsc0JBRGU7QUFFZkssNEJBRmU7QUFHZk07QUFIZSxDQUFqQjs7QUFNQSxTQUFTRixVQUFULENBQW9CSCxLQUFwQixFQUEyQkosSUFBM0IsRUFBaUM7QUFDL0IsTUFBTU0sY0FBY0YsTUFBTWUsR0FBTixDQUFVLFVBQVNULElBQVQsRUFBZTtBQUMzQyxRQUFNQyxhQUFhRixVQUFVQyxJQUFWLEVBQWdCVixJQUFoQixDQUFuQjs7QUFFQSxXQUFPVyxVQUFQO0FBQ0QsR0FKbUIsQ0FBcEI7O0FBTUEsU0FBT0wsV0FBUDtBQUNEOztBQUVELFNBQVNVLFVBQVQsQ0FBb0JGLEtBQXBCLEVBQTJCZCxJQUEzQixFQUFpQztBQUMvQixNQUFJZSxjQUFjLEVBQWxCOztBQUVBLE1BQUlmLEtBQUtvQixjQUFMLENBQW9CTixLQUFwQixDQUFKLEVBQWdDO0FBQzlCQyxrQkFBY2YsS0FBS2MsS0FBTCxDQUFkO0FBQ0Q7O0FBRUQsU0FBT0MsV0FBUDtBQUNEIiwiZmlsZSI6InRlbXBsYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmaWxlU3lzdGVtVXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vdXRpbGl0aWVzL2ZpbGVTeXN0ZW0nKTtcblxuY29uc3QgeyByZWFkRmlsZSB9ID0gZmlsZVN5c3RlbVV0aWxpdGllcztcblxuZnVuY3Rpb24gcGFyc2VGaWxlKGZpbGVQYXRoLCBhcmdzKSB7XG4gIGNvbnN0IGNvbnRlbnQgPSByZWFkRmlsZShmaWxlUGF0aCksXG4gICAgICAgIHBhcnNlZENvbnRlbnQgPSBwYXJzZUNvbnRlbnQoY29udGVudCwgYXJncyk7XG5cbiAgcmV0dXJuIHBhcnNlZENvbnRlbnQ7XG59XG5cbmZ1bmN0aW9uIHBhcnNlQ29udGVudChjb250ZW50LCBhcmdzKSB7XG4gIGNvbnN0IGxpbmVzID0gY29udGVudC5zcGxpdCgnXFxuJyksXG4gICAgICAgIHBhcnNlZExpbmVzID0gcGFyc2VMaW5lcyhsaW5lcywgYXJncyksXG4gICAgICAgIHBhcnNlZENvbnRlbnQgPSBwYXJzZWRMaW5lcy5qb2luKCdcXG4nKTtcblxuICByZXR1cm4gcGFyc2VkQ29udGVudDtcbn1cblxuZnVuY3Rpb24gcGFyc2VMaW5lKGxpbmUsIGFyZ3MpIHtcbiAgY29uc3QgcGFyc2VkTGluZSA9IGxpbmUucmVwbGFjZSgvXFwkXFx7KC4rPylcXH0vZywgZnVuY3Rpb24obWF0Y2gsIHRva2VuKSB7XG4gICAgY29uc3QgcGFyc2VkVG9rZW4gPSBwYXJzZVRva2VuKHRva2VuLCBhcmdzKTtcblxuICAgIHJldHVybiBwYXJzZWRUb2tlbjtcbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZExpbmU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwYXJzZUZpbGUsXG4gIHBhcnNlQ29udGVudCxcbiAgcGFyc2VMaW5lXG59O1xuXG5mdW5jdGlvbiBwYXJzZUxpbmVzKGxpbmVzLCBhcmdzKSB7XG4gIGNvbnN0IHBhcnNlZExpbmVzID0gbGluZXMubWFwKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICBjb25zdCBwYXJzZWRMaW5lID0gcGFyc2VMaW5lKGxpbmUsIGFyZ3MpO1xuXG4gICAgcmV0dXJuIHBhcnNlZExpbmU7XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWRMaW5lcztcbn1cblxuZnVuY3Rpb24gcGFyc2VUb2tlbih0b2tlbiwgYXJncykge1xuICBsZXQgcGFyc2VkVG9rZW4gPSAnJztcblxuICBpZiAoYXJncy5oYXNPd25Qcm9wZXJ0eSh0b2tlbikpIHtcbiAgICBwYXJzZWRUb2tlbiA9IGFyZ3NbdG9rZW5dO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlZFRva2VuO1xufVxuIl19